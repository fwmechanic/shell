#!/usr/bin/env bash

die() { printf %s "${@+$@$'\n'}" 1>&2 ; exit 1 ; }
see() ( { set -x; } 2>/dev/null ; "$@" )

# keep in sync with %~dp0/tagr !!!
# eXclude .gitignored files per https://github.com/universal-ctags/ctags/issues/218#issuecomment-377717588

TAGS_FIELDS=+K+z+S+l+n
#            K           Kind of tag as full name
#              z         Include the "kind:" key in kind field (use k or K) in tags output
#                S       Signature of routine (e.g. prototype or parameter list)
#                  l     Language of input file containing tag
#                    n   Line number of tag definition
TAGS_EXTRAS=+f
#            f           Include [a tag record] for the base file name of every input file

TAGS_FNM_BASE=.k_edit_tags
RAW_TAGS="${TAGS_FNM_BASE}.original"
TS_TAGGER_UNIQUE_TAGS="${TAGS_FNM_BASE}.ts_tagger_unique"

CTAGS_CLI=(
    ctags
    -o "${RAW_TAGS}"          # specify output file
  # --totals=yes              # print statistics about input and output
    --tag-relative=yes        # use paths relative to the tag file
    --excmd=number            # use line numbers instead of search patterns
    --fields="$TAGS_FIELDS"   # specify extra fields to include in output
    --extras="$TAGS_EXTRAS"   # include extra tag entries
    --links=no                # don't follow symlinks
  # --verbose                 # print debug messages
)

#                          | tee /dev/stderr
#
rg() {
   local ts_tagger_ofnm="ts_tags.txt"
   command rg --files > .rgfiles
   ( # run the following two commands in parallel and wait for both to complete
    grep '\.ts$' .rgfiles | ts_tagger > "$ts_tagger_ofnm"  &
    <.rgfiles "${CTAGS_CLI[@]}" "$@" -L - &
    wait
   )
   local ctags_cnt tts_cnt merged_cnt ts_tagger_unique_tags_cnt uniq_add_cnt
   ctags_cnt="$(<"$RAW_TAGS" wc -l)" tts_cnt="$(<"$ts_tagger_ofnm" wc -l)"
   echo "tagts: $ctags_cnt tags in ctags output; $RAW_TAGS"
   echo "tagts: $tts_cnt tags in ts_tagger output; $ts_tagger_ofnm"
   cat "$RAW_TAGS" "$ts_tagger_ofnm" | LC_ALL=C sort -u | tagts_dedup > "$TAGS_FNM_BASE"
   # ??? grep -vF 'anonymousObject'
   merged_cnt="$(<"$TAGS_FNM_BASE" wc -l)"
   grep -vFf "$RAW_TAGS" "$ts_tagger_ofnm" | perl -F'\t' -ane 'print $F[0], "\n"' | LC_ALL=C sort > "$TS_TAGGER_UNIQUE_TAGS"
   ts_tagger_unique_tags_cnt="$(<"$TS_TAGGER_UNIQUE_TAGS" wc -l)"
   local diffo='' diff=$((ctags_cnt + tts_cnt - merged_cnt))
   if (( diff > 0 )); then
      uniq_add_cnt=$((merged_cnt - ctags_cnt))
      diffo=" (rmvd $diff dup tags; ts_tagger added $uniq_add_cnt unique tags, see $TS_TAGGER_UNIQUE_TAGS"
      # if (( ts_tagger_unique_tags_cnt != uniq_add_cnt )); then
      #    die "FAILURE $ts_tagger_unique_tags_cnt == $uniq_add_cnt  $TS_TAGGER_UNIQUE_TAGS"
      #    fi
      fi
   echo "tagts: $merged_cnt tags in merged output $TAGS_FNM_BASE$diffo"
   if command -v ts_tagger_spot_chk > /dev/null; then ts_tagger_spot_chk "$TAGS_FNM_BASE"; fi
}

all() { see "${CTAGS_CLI[@]}" --quiet=yes "$@" --recurse ; }
one() { see "${CTAGS_CLI[@]}" --quiet=yes "$1" ; }

fxnm=rg  # default subcommand
if [[ "$1" ]]; then
   fxnm="$1" ; shift
   fi

"${fxnm}" "$@"
