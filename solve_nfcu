#!/usr/bin/perl -w

#
# usage: ./solve_nfcu name.CSV

use strict;
use warnings;
use English;

use FindBin;
use lib $FindBin::Bin;
use CCStmtP2tToCsv;  # utility fxns & constants
my $rpmdamtcapt = CCStmtP2tToCsv::rpmdamtcapt();
my $c2dcp = \&CCStmtP2tToCsv::cents_to_dc_pretty;  # brevity
my $tocents = \&CCStmtP2tToCsv::tocents;  # brevity

my $nfcu_front_amt = 22500;
# pretty much the cause of this script's existence: fucking NFCU generously
# immmediately (regardless of hold duration) "fronts" (adds to available balance)
# the first $225 of each day's total deposit amount.  If deposits made on
# sequential days are kept on hold, each day's held deposit contributes its
# fronted amount to the available balance (but this is shown NOWHERE in any NFCU
# ledger (web UI account ledger, CSV download) making it difficult to ascertain
# how the available balance was calculated, and in particular which deposits have
# cleared (been taken off late-inflicted 5-day hold).

# how this hack works:
# download from NFCU a CSV containing a partial account ledger
# into the first lines of this CSV, insert
#
#    currbal  123.45      # current now balance shown in NFCU web UI
#    availbal     758.66  # avail now balance shown in NFCU web UI
#    beginbal     1125.45 # avail balance at date just prior to first txn in CSV
#    pendgreendep         # <- add this iff a deposit has been made this day and NFCU register shows a pending deposit for $225.00 ($ amount shown in green)
#
# Live and learn: circa "closing time" (after hours of a biz day) the CSV
# download does not include the most recent day's txns which ARE visible in the
# web UI register.  By the following morning, the CSV download is sync'd with the
# online register.

my ($currbal,$availbal,$beginbal);
my $pendgreendep = 0;
my (%deps,%depsums);
my $definitelyClearedTxnSum = 0;

my $dq = '"';
my $reamt = qr{\d*\.\d{2}};

while( <> ) {
   my $amt;
   s/#.*//;
   if(    m!^\s*$!  ) { }
   elsif( ($amt) = m!^currbal\s+($reamt)\s*!  ) { $currbal  = $tocents->($amt); print "currbal  = ",$c2dcp->($currbal ),"\n"; }
   elsif( ($amt) = m!^availbal\s+($reamt)\s*! ) { $availbal = $tocents->($amt); print "availbal = ",$c2dcp->($availbal),"\n"; }
   elsif( ($amt) = m!^beginbal\s+($reamt)\s*! ) { $beginbal = $tocents->($amt); print "beginbal = ",$c2dcp->($beginbal),"\n"; }
   elsif( ($amt) = m!^pendgreendep\s*! )        { $pendgreendep = $nfcu_front_amt; print "pendgreendep = ",$c2dcp->($pendgreendep),"\n"; }
   elsif( m!^"Date","No.","Description","Debit","Credit"$! ) {
      $currbal  or die "txn before currbal seen\n";
      $availbal or die "txn before availbal seen\n";
      $beginbal or die "txn before beginbal seen\n";
      $currbal - $availbal != 0 or die "currbal == availbal; nothing to do\n";
      print 'total $ HELD: ', $c2dcp->( $currbal - $availbal ), "\n";

      }
   elsif( my ($m1,$m2,$d1,$d2,$yyyy,$item,$debit,$credit) = m!^$dq(\d?)(\d)/(\d?)(\d)/(\d{4})$dq,$dq\d*$dq,$dq([^$dq]+)$dq,$dq((?:$reamt)?)$dq,$dq((?:$reamt)?)$dq! ) {
      $debit or $credit or die "neither debit nor credit\n";
      $m1 = length($m1) > 0 ? $m1 : '0';
      $d1 = length($d1) > 0 ? $d1 : '0';
      my $yyyymmdd = "$yyyy/$m1$m2/$d1$d2";
      my $dc = $debit ? -$tocents->($debit) : $tocents->($credit);
      my $dcp = $c2dcp->($dc);
      print "txn @ $yyyymmdd: $dcp $item\n";
      if( $dc < 0 || $item eq "Dividend" ) {  # Dividends are never held
         $definitelyClearedTxnSum += $dc;
         }
      else {
         push @{$deps{$yyyymmdd}}, $dcp;
         $depsums{$yyyymmdd} += $dc;
         }
      }
   else { die "bad line: $_";
      }
   }

print "definitelyClearedTxnSum = ",$c2dcp->($definitelyClearedTxnSum),"\n";
my $sum = $beginbal+$definitelyClearedTxnSum+$pendgreendep;
print "beginbal + definitelyClearedTxnSum + pendgreendep = ",$c2dcp->($sum),"\n";
#
# The huge underlying assumption of the following code is that all holds are
# equal (this is a safe assumption because assholey NFCU is now putting EVERY
# deposited check on 5-biz-day-hold), therefore deposited checks always CLEAR
# in FIFO order.
#
# Note also that balances displayed by below code can only be validly compared
# against the *ending* Available Balance (availbal) because all balances
# displayed have ALL debit txns in the input CSV file ($definitelyClearedTxnSum) presubtracted.
#
for my $ymd ( sort keys %depsums ) {
   my $dep = $depsums{$ymd};
   my $front = $dep < $nfcu_front_amt ? $dep : $nfcu_front_amt;
   my ($add,$anno,$held);
   if( $sum + $dep <= $availbal ) { $anno = 'CLEARED'.' 'x16; $add = $dep;   $held = 0; } # full amount has cleared to avail bal
   else                           { $anno = 'HELD'   ; $add = $sum == $availbal ? 0 : $front; $held = $dep-$add;  } # only fronted amount has been added to avail bal
   print "@ $ymd ",$c2dcp->($sum)," + ",$c2dcp->($add),' '
         ,($held!=0 ? 'fronted, ' . $c2dcp->($held) . " $anno, " : "$anno ")
         , "checks:",join ' ',@{$deps{$ymd}},"\n";
   $sum += $add;
   }
print "calculated balance matches supplied Available Balance: result accurate\n" if $sum == $availbal;
