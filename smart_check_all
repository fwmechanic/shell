#!/usr/bin/env bash

# intended use: predicate for cron script pinging healthchecks.io
#
# sample cron.d:
#-----------------------------------------------------------------
# # /etc/cron.d/smart_check_all: crontab fragment
#
# HC_UUID=my-uuid
# # run every 10AM   0 10
# 0 10 * * *  root  /root/smart_check_all ; /root/hlthchk_ping $?
#-----------------------------------------------------------------
# where /root/hlthchk_ping contains
# #!/usr/bin/env bash
#
# HC_URL="https://hc-ping.com/"
# # set -x
# /usr/bin/curl -fsS -m 10 --retry 5 -o /dev/null "$HC_URL$HC_UUID${1:+/}$1"
#-----------------------------------------------------------------

die() { printf %s "${@+$@$'\n'}" 1>&2 ; exit 1 ; }

# smartctl must be run as root to do anything useful
(( EUID == 0 )) || die "smart_check_all: must run as root!"  # cannot log

logf="${SMART_CHECK_ALL_LOGFILE:-"/root/smart_check_all.log"}"
log() { echo "${@+"$(date +'%y%m%dt%H%M%S') $*"}" >> "$logf" ; }
die() { echo "$@" 1>&2 ; log "$@" ; exit 1 ; }

log ; log "starting"  # empty line precedes each run's log sequence
PATH="$PATH:/usr/sbin"  # smartctl lives here, missing from root cron PATH
command -v findmnt  > /dev/null || die "smart_check_all: findmnt command not available; PATH=$PATH"
command -v smartctl > /dev/null || die "smart_check_all: smartctl command not available; PATH=$PATH"
secs_start=$SECONDS failcount=0 devcount=0
while read -r UUID SIZE SOURCE TARGET LABEL ; do
   (( ++devcount ))
   # echo "UUID=$UUID,SIZE=$SIZE,SOURCE=$SOURCE,TARGET=$TARGET,LABEL=$LABEL"
   : "${LABEL:=$UUID}"
   log "checking $SOURCE $TARGET $LABEL $SIZE"
   if smartctl -H "$SOURCE" > /dev/null ; then
      log "passed   $SOURCE"
   else
      xstatus=$? # ; echo "xstatus=$xstatus"
      (( ++failcount ))
      log "$(printf "failed   %s 0x%X\n" "$SOURCE" "$xstatus")"
   fi
done < <(findmnt -nr -t ext4 -o UUID,SIZE,SOURCE,TARGET,LABEL)
log "$failcount failures found across $devcount devices in $(( SECONDS - secs_start )) seconds"

exit $(( failcount > 0 ? 1 : 0 ))
